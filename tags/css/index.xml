<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Css on 淍儿的博客</title><link>https://blog.zhouer.xyz/tags/css/</link><description>Recent content in Css on 淍儿的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 24 May 2024 21:55:00 +0000</lastBuildDate><atom:link href="https://blog.zhouer.xyz/tags/css/index.xml" rel="self" type="application/rss+xml"/><item><title>清除浮动</title><link>https://blog.zhouer.xyz/post/post4/</link><pubDate>Fri, 24 May 2024 21:55:00 +0000</pubDate><guid>https://blog.zhouer.xyz/post/post4/</guid><description>&lt;img src="https://cdn.jsdelivr.net/gh/zhouer1/resource/img/post4_cover.png" alt="Featured image of post 清除浮动" />&lt;p>一种实际情况：在一个父元素包含子元素的布局中，包含块高度需要自适应所以不能设置高度，子元素恰好因为布局需求设为浮动，由于浮动元素会脱离文档流，如果此时包含块没有设置高度，就会产生高度塌陷&lt;/p>
&lt;p>这时浮动元素是对父元素产生了影响，浮动也可以对其他元素产生影响，主要看实际情况&lt;/p>
&lt;p>所以，当&lt;strong>浮动元素对布局产生了和开发者的预期不同的影响时&lt;/strong>，我们就需要清除浮动&lt;/p>
&lt;p>清除浮动是清除&lt;strong>浮动导致的布局问题&lt;/strong>，不是把浮动干掉&lt;/p>
&lt;h3 id="设置额外标签--clear方式清除浮动">设置额外标签 + clear方式清除浮动&lt;/h3>
&lt;p>在浮动元素下方添加一个块级元素，设置clear: both&lt;/p>
&lt;p>缺点：产生了额外的元素，造成语义混乱和性能浪费&lt;/p>
&lt;h3 id="创建bfc清除浮动">创建BFC清除浮动&lt;/h3>
&lt;p>设置包含块display:none（实际上我们可以设置为不为visible的所有值），会创建一个BFC，达到清除浮动的效果&lt;/p>
&lt;p>设置包含块为浮动，也可以创建BFC，解决这个问题&lt;/p>
&lt;p>缺点：设置display和float都会对布局产生影响，这改变了父元素本身布局的”含义“，产生潜在隐患或者额外的CSS代码开销&lt;/p>
&lt;p>关于BFC的一些问题，看看GPT给出的解释&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/zhouer1/resource/img/post4_1.png"
loading="lazy"
alt="post4_1"
>&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/zhouer1/resource/img/post4_2.png"
loading="lazy"
alt="post4_2"
>&lt;/p>
&lt;p>总的来说，就是：&lt;/p>
&lt;ul>
&lt;li>子元素和父元素分别设置浮动，会产生两个不同的BFC&lt;/li>
&lt;li>计算BFC的高度时，浮动元素也参与计算&lt;/li>
&lt;/ul>
&lt;h3 id="设置伪元素--clear方式清除浮动">设置伪元素 + clear方式清除浮动&lt;/h3>
&lt;p>为包含块设置clearfix类&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="nc">clearfix&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="nd">after&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">content&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">block&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">clear&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">both&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这种方式确保了结构的语义化，对布局也没有直接影响，比较推荐&lt;/p>
&lt;p>&lt;a class="link" href="https://www.pixiv.net/artworks/115522629" target="_blank" rel="noopener"
>封面链接&lt;/a>
&lt;a class="link" href="https://chat.liu.xyz/" target="_blank" rel="noopener"
>ChatGPT镜像站友情链接&lt;/a>&lt;/p></description></item></channel></rss>