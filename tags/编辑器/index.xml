<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>编辑器 on 淍儿的博客</title><link>https://blog.zhouer.xyz/tags/%E7%BC%96%E8%BE%91%E5%99%A8/</link><description>Recent content in 编辑器 on 淍儿的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 04 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.zhouer.xyz/tags/%E7%BC%96%E8%BE%91%E5%99%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>一种可视化组件实时转源码编辑功能的实现</title><link>https://blog.zhouer.xyz/post/onlineeditor/</link><pubDate>Thu, 04 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.zhouer.xyz/post/onlineeditor/</guid><description>&lt;img src="https://cdn.jsdelivr.net/gh/zhouer1/resource/img/cover.png" alt="Featured image of post 一种可视化组件实时转源码编辑功能的实现" />&lt;h3 id="前置条件">前置条件&lt;/h3>
&lt;p>平台组件渲染思路：&lt;/p>
&lt;ul>
&lt;li>平台以JSON形式对拖拽式组件进行语法层面的组织&lt;/li>
&lt;li>平台维护一个config.js配置文件，里面是每个组件的JSON预定义信息&lt;/li>
&lt;li>每向平台加入一个新的组件，手动对其进行JSON的预定义&lt;/li>
&lt;li>实例化拖拽式组件时，通过某种规则，对预定义的配置文件中的组件JSON进行转义，转成Vue语法并进行渲染&lt;/li>
&lt;/ul>
&lt;h3 id="基本思路">基本思路&lt;/h3>
&lt;ol>
&lt;li>点击按钮，展示编辑界面&lt;/li>
&lt;li>我们可以获取当前大屏画布上的所有组件的JSON信息&lt;/li>
&lt;li>将这些JSON信息转义为Vue源码&lt;/li>
&lt;li>将Vue源码展示在编辑器上&lt;/li>
&lt;li>修改Vue代码&lt;/li>
&lt;li>点击保存按钮，将Vue代码转义为JSON&lt;/li>
&lt;li>平台重新渲染画布&lt;/li>
&lt;/ol>
&lt;h3 id="savevue方法">saveVue方法&lt;/h3>
&lt;p>用户点击保存按钮，调用saveVue方法，方法主要完成以下处理&lt;/p>
&lt;ol>
&lt;li>
&lt;p>通过MonacoEditor的getValue()API获取编辑器内Vue源码的内容&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通过vue-template-compiler库的parseComponent()方法对Vue源码进行解析，并转为SFC描述对象，从SFC对象中分别提取出template,script,style标签中的内容(内容均为字符串)
&lt;img src="https://cdn.jsdelivr.net/gh/zhouer1/resource/img/parsedComponent.png"
loading="lazy"
alt="parsedComponent"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通过vue-template-compiler库的compile()方法对template标签里的内容进行解析，并获取其ast
&lt;img src="https://cdn.jsdelivr.net/gh/zhouer1/resource/img/ast.png"
loading="lazy"
alt="ast"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>提取ast中与大屏画布相关的属性，使用MergeDeepAttribute方法进行合并，提取ast中与平台定义的组件的对象语法格式相关的属性，使用buildConfig方法构建全新的组件JSON(这里是直接提取所有的，全部重新构建，并不关注&amp;rsquo;改动&amp;rsquo;而只关注&amp;rsquo;结果&amp;rsquo;，性能有待提升)
&lt;img src="https://cdn.jsdelivr.net/gh/zhouer1/resource/img/handleAST.png"
loading="lazy"
alt="handleAST"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>分别对script和style标签进行处理，如果有内容，将其添置于大屏画布JSON中，如果没有内容则不做处理&lt;/p>
&lt;/li>
&lt;li>
&lt;p>关闭对话框，返回大屏画布页面，此时画布会重新渲染，组件被更新&lt;/p>
&lt;/li>
&lt;/ol></description></item></channel></rss>